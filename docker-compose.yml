version: '3'

######### Services ###################################

services:
  # Server container
  nginx:
    container_name: nginx
    environment:
      APP_DOMAIN: ${APP_DOMAIN}
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/logs:/var/log/nginx
      - ./docker/nginx/redirect.conf:/etc/nginx/conf.d/redirect.template
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.template
      - ./docker/nginx/certs:/etc/nginx/certs
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: /bin/sh -c "envsubst '$$APP_DOMAIN' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && envsubst '$$APP_DOMAIN' < /etc/nginx/conf.d/redirect.template > /etc/nginx/conf.d/redirect.conf && exec nginx -g 'daemon off;'"
    links:
      - php
      - db
      - supervisor
    depends_on:
      - php
    networks:
      - docker-network
  certbot:
    image: certbot/certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot

  # PHP FastCGI Process Manager container
  php:
    build:
      context: docker/php
      dockerfile: Dockerfile
    tty: true
    volumes:
      - ./:/var/www/html
    environment:
      # If you down want to use xDebug, set remote_enable=0
      XDEBUG_CONFIG: "remote_enable=0"
      PHP_IDE_CONFIG: "serverName=Demon PowerSports"
    networks:
      - docker-network
    depends_on:
      - db
    links:
      - supervisor

  # Supervisor container (schedule and queue runner)
  supervisor:
    build:
      context: docker/supervisor
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www/html
      - ./docker/supervisor/conf.d:/etc/supervisor/conf.d
      - ./docker/supervisor/logs:/var/log
    networks:
      - docker-network
    depends_on:
      - db

  # Database container
  db:
    image: mysql:5.7.22
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    tty: true
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - docker-network

######### Volume ############################################
volumes:
  dbdata:
    driver: local

######### Network Bridge ###################################
networks:
  docker-network:
    driver: bridge
